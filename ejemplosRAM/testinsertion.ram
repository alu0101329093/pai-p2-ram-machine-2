# InserciÃ³n:
# 1 for j = 2 to n do
# 2    key = A[j]
# 3    i = j - 1
# 4    while i > 0 and A[i] > key
# 5       A[i + 1] = A[i]
# 6       i = i - 1
# 7    end
# 8    A[i + 1] = key
# 9 end

# Read vector
# R1 -> vector
# R2 -> vector length
      load =0
      store 2
lee:	read 3
      load 3
			jzero for_init
      store 1[2]
      load 2
      add =1
      store 2
			jump lee


# R3 -> i index
# R4 -> j index
# R5 -> key
for_init: load =1
          store 4

for:	    load 4
          add =1
          sub 2
          jgtz for_fin 

          load 1[4]
          store 5

          load 4
          sub =1
          store 3

# R1 -> vector
# R3 -> i index
# R5 -> key
# R6 -> temp index
while:      load 3
            mul =-1 
            jgtz while_fin

            load 5 
            sub 1[3]  
            add =1
            jgtz while_fin

            load 3
            add =1
            store 6
            load 1[3]
            store 1[6]

            load 3
            sub =1
            store 3
            jump while

while_fin:  load 3
            add =1
            store 8
            load 5
            store 1[8]

            load 4
            add =1
            store 4
            jump for

# Print vector
# R1 -> vector
# R2 -> vector length
# R3 -> i index
for_fin:  load =0
          store 3
escribe:  load 3
          sub 2
          add =1
          jgtz fin

          write 1[3]

          load 3
          add =1
          store 3
          jump escribe

fin:    halt